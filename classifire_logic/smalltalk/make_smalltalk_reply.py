from services.gpt.gpt_client import send_to_gpt
from db.db_funcs import get_user_messages, add_message


def get_smalltalk_reply(user_id, user_message):
    prompt = f"""
    Не используй сухие фразы, отвечай так, чтобы это звучало естественно в живом диалоге.
    Правила:
    - Если пользователь здоровается — тоже поздоровайся, представься (один раз за день) и поинтересуйся его именем. На этом этапе, если имя не назвал клиент, не говори - рада познакомиться и т п
    - Если уже представилась сегодня — не повторяйся без просьбы клиента.
    - Если уже здоровалась сегодня — не повторяйся.
    - Если пользователь назвал своё имя — ответь тепло (например: "Очень приятно, [имя]! ❤️") и мягко спроси он хочет записаться или сначала узнать про то, какие вообще услуги у нас есть.
    - Если клиент прощается — тоже попрощайся, добавь тёплую нотку (например: "Буду ждать вас снова, хорошего дня ✨").
    - Если клиент делает комплимент или говорит что-то хорошее — поблагодари и поддержи разговор.
    - Отвечай так, чтобы текст был живым, будто общается настоящий человек.
    """

    messages = get_user_messages(user_id)
    reply = send_to_gpt([{'role': 'system', 'content': prompt}] + messages)

    add_message(user_id, 'assistant', reply)
    return reply
