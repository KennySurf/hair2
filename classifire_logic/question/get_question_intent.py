# classifire_logic/question/get_question_intent.py
from db.db_funcs import get_user_messages
from services.gpt.gpt_client import send_to_gpt

def return_question_intent(user_id, message):
    prompt = """
    Ты NLU-классификатор для сценария вопроса. Определи, к какой теме относится ПОСЛЕДНЕЕ сообщение клиента, учитывая контекст диалога.

    Наш перечень тем (приоритет сверху вниз):
    1. "Вопрос цены" — если клиент спрашивает о стоимости или уточняет детали, влияющие на цену,
       даже если он отвечает "да" или выбирает вариант метода/цвета в продолжении разговора про цену.
       Пример: "Какая цена на наращивание?" → Вопрос цены.
       Пример: "да, капсулы" (после вопроса про метод наращивания в контексте цены) → тоже Вопрос цены.
    2. "Все услуги" — если клиент интересуется, какие услуги вообще есть.
    3. Конкретные услуги:
       - "Наращивание волос"
       - "Окрашивание волос"
       - "Стрижка волос"
       - "Укладки и мейк"
       - "Уход за волосами"
       - "Окрашивание и ламинирование бровей"
       - "Продажа волос"

    ⚠️ Важно: классифицируй с учётом контекста. Если диалог начался с вопроса про цену,
    сохраняй категорию "Вопрос цены" для всех уточняющих ответов клиента, пока тема не сменится.
    Возвращай строго одно значение из списка выше.
    
    ⚠️ Если последнее сообщение клиента короткое или содержит только имя/подтверждение ("да", "ок", "Алексей") 
и оно идёт сразу после обсуждения цены или выбора метода, 
сохраняй категорию текущей темы диалога (например, "Вопрос цены"), а не "Все услуги".

    """

    messages = get_user_messages(user_id)
    reply = send_to_gpt(messages[1:-1] + [{'role': 'system', 'content': prompt}] + messages[-1:])
    print(f'NLU quest: {reply}')
    return reply
