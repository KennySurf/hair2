from services.gpt.gpt_client import send_to_gpt
from db.db_funcs import get_user_messages

def return_booking_intent(user_id, message: str) -> str:
    """
    Классификатор сообщений внутри booking
    :param message:
    :return: str
    """

    prompt = """
    Ты — NLU классификатор для сценария записи в салон красоты. Определи, отвечает ли клиент на вопрос, или задаёт сам. Дай определённый ответ.
    
    answer: строго если клиент отвечает на вопрос
    
    other: Строго если клиент задаёт вопрос

    Верни только один из вариантов: answer или other.
    Если клиент отвечает на заданный ранее вопрос - answer, спрашивает сам - other и никак иначе 
    """

    messages = get_user_messages(user_id)
    classifier_message = messages[1:-1] + [{'role': 'system', 'content': prompt}] + [messages[-1]]
    return send_to_gpt(classifier_message)

    # prompt = """
    # Ты — NLU классификатор для сценария записи в салон красоты. Определи, относится ли сообщение пользователя к записи на услугу. Верни один из вариантов:
    #
    # answer: Сообщение содержит информацию о записи (например, запись на консультацию, услуга, выбор услуги, мастер, имя мастера, дата, время, или клиент оставляет свои данные и т п). Если клиент отвечает на вопрос - заноси сюда
    #
    # other: Сообщение не связано с записью (например, запрос о выборе мастера или услуг, предоставлении списка мастеров и т п). Заноси сюда, если клиент что то спрашивает. Если отвечает - это не сюда.
    #
    # Верни только один из вариантов: answer или other.
    # """
