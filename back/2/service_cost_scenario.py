from services.gpt.gpt_client import send_to_gpt
from docx import Document
from db.db_funcs import update_services_id, update_state, get_user_messages, add_message
from services.gpt.gpt_client import send_to_gpt
from db.price_question_db_funcs import get_price_question_state, update_price_question_state, reset_price_question_state

def idle(user_id, user_messages,):
    print('idleee')

    prompt = """
    –ü—Ä–∞–≤–∏–ª–∞ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å–≤–µ—Ä—Ö—É –≤–Ω–∏–∑):
    
    1. –ï—Å–ª–∏ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞ —É–∂–µ –∏–∑–≤–µ—Å—Ç–Ω–æ ‚Äî –≤—ã–≤–µ–¥–∏ —Å—Ç—Ä–æ–≥–æ: –∑–Ω–∞—é –∏–º—è.
    
    2. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–¥–∞—ë—Ç –≤–æ–ø—Ä–æ—Å –ø—Ä–æ —É—Å–ª—É–≥–∏ (—Ü–µ–Ω—ã, –ø—Ä–æ—Ü–µ–¥—É—Ä—ã, –º–∞—Ç–µ—Ä–∏–∞–ª—ã, –ø—Ä–æ—Ü–µ—Å—Å –∏ —Ç.–ø.) ‚Äî
       –æ—Ç–≤–µ—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–æ–≤–Ω–æ –¥–≤–µ —á–∞—Å—Ç–∏:
       - "–°–µ–π—á–∞—Å –≤—Å—ë —Ä–∞—Å—Å–∫–∞–∂—É"
       - –µ—Å–ª–∏ –∏–º—è –∫–ª–∏–µ–Ω—Ç–∞ –µ—â—ë –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ ‚Äî –¥–æ–±–∞–≤—å —Ç–æ–ª—å–∫–æ: "–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?"
    
    3. –ï—Å–ª–∏ –≤—ã –µ—â—ë –Ω–µ –∑–¥–æ—Ä–æ–≤–∞–ª–∏—Å—å –∑–∞ –¥–∏–∞–ª–æ–≥ ‚Äî –ø–µ—Ä–µ–¥ —ç—Ç–∏–º–∏ —Ñ—Ä–∞–∑–∞–º–∏ –¥–æ–±–∞–≤—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≤ –≤–∏–¥–µ:
       "–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ú–∏—è, —è –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ —Ä–∞–±–æ—Ç–µ —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ —Å—Ç—É–¥–∏–∏ EKSHE ü©∑".
    
    –ó–∞–ø—Ä–µ—â–µ–Ω–æ:
    ‚Äî —É–ø–æ–º–∏–Ω–∞—Ç—å —Ü–µ–Ω—ã, –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é, –æ–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥;
    ‚Äî –∑–∞–¥–∞–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã;
    ‚Äî –¥–æ–±–∞–≤–ª—è—Ç—å —á—Ç–æ-—Ç–æ –ø–æ–º–∏–º–æ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö —Ñ—Ä–∞–∑.
               """

    idle_reply = send_to_gpt(user_messages + [{'role': 'system', 'content': prompt}])

    if idle_reply == '–∑–Ω–∞—é –∏–º—è':
        update_price_question_state(user_id, 'get_hook')
        print('knowww')
        return get_hook(user_id, user_messages)
    update_price_question_state(user_id, 'get_hook')
    print('not knoww')
    return idle_reply

def get_hook(user_id, user_messages):
    file = f'classifire_logic/question/files/–æ–±—â–µ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ.docx'

    doc = Document(file)
    full_text = "\n".join([para.text for para in doc.paragraphs])

    prompt = f"""
       –í–µ–∂–ª–∏–≤–æ —Å–æ–æ–±—â–∏ –∫–ª–∏–µ–Ω—Ç—É, —á—Ç–æ —Ü–µ–Ω—É —Å–∫–∞–∑–∞—Ç—å –º–æ–∂–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.
       –ö–æ—Ä–æ—Ç–∫–æ –æ–¥–Ω–∏–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –æ–±—ä—è—Å–Ω–∏ –æ—Ç —á–µ–≥–æ –∑–∞–≤–∏—Å–∏—Ç —Ü–µ–Ω–∞ - –æ–±—å—è—Å–Ω–µ–Ω–∏–µ –º–æ–∂–µ—à—å –±—Ä–∞—Ç—å –∏–∑ –¥–æ–ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
       –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø—Ä–æ –Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ - —Å–ø—Ä–æ—Å–∏ –µ–≥–æ, –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è –ª–∏ –æ–Ω —É–∂–µ —Å –º–µ—Ç–æ–¥–æ–º –Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏—è - –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏—è –≤–æ–∑—å–º–∏ –∏–∑ –¥–æ–ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
       –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø—Ä–æ –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ - —Å–ø—Ä–æ—Å–∏ –µ–≥–æ, –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è –ª–∏ –æ–Ω —É–∂–µ —Å —Ü–≤–µ—Ç–æ–º.

       –¥–æ–ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
       {full_text}
       """

    update_price_question_state(user_id, 'get_visual')
    hook_reply = send_to_gpt(user_messages + [{'role': 'system', 'content': prompt}])
    return hook_reply

def get_visual(user_id, user_messages):
    prompt = f"""
    –û—Ü–µ–Ω–∏ –∑–∞–¥–∞–ª –ª–∏ –∫–ª–∏–µ–Ω—Ç –∫–∞–∫–æ–π —Ç–æ –≤–æ–ø—Ä–æ—Å, –∏–ª–∏ –æ–Ω –æ–±–æ–∑–Ω–∞—á–∏–ª —Å–≤–æ–∏ –∂–µ–ª–∞–Ω–∏—è
    
    –ï—Å–ª–∏ –æ–Ω –æ–±–æ–∑–Ω–∞—á–∏–ª –∂–µ–ª–∞–Ω–∏—è - –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è —Å —Ü–≤–µ—Ç–æ–º/–º–µ—Ç–æ–¥–æ–º –∏ —Ç –¥ - –≤–µ—Ä–Ω–∏: –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è
    –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å - –≤–µ—Ä–Ω–∏: –≤–æ–ø—Ä–æ—Å
    –ù–∏—á–µ–≥–æ –ª–∏—à–Ω–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–π.
    """

    vis_class = send_to_gpt(user_messages + [{'role': 'system', 'content': prompt}])
    if vis_class == '–æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è':
        service_prompt = f"""
        –≤—ã–¥–µ–ª–∏ —É—Å–ª—É–≥—É –∏–∑ –∑–∞–ø—Ä–æ—Å–∞ –∫–ª–∏–µ–Ω—Ç–∞.
        –ù–∞—à –ø—É–ª:
        –æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ
        –Ω–∞—Ä–∞—â–∏–≤–∞–Ω–∏–µ

        –°—Ç—Ä–æ–≥–æ –Ω–∞–ø–∏—à–∏ —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞—à–µ–π —É—Å–ª—É–≥–∏, –∫ –∫–æ—Ç–æ—Ä–æ–π –ø–æ–¥—Ö–æ–¥–∏—Ç –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å.
        """

        service_name = send_to_gpt(
            user_messages[:-1] + [{'role': 'assistant', 'content': service_prompt}] + user_messages[-1:])

        if service_name == '–æ–∫—Ä–∞—à–∏–≤–∞–Ω–∏–µ':
            update_services_id(user_id, '17637553')
        else:
            update_services_id(user_id, '10928000')
        update_state(user_id, 'get_advice')

        agree_prompt = f"""–ü—Ä–µ–¥–ª–æ–∂–∏ –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∏–µ–Ω—Ç—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
        agree_reply = send_to_gpt(user_messages + [{'role': 'system', 'content': agree_prompt}])
        return agree_reply
    else:
        file = f'classifire_logic/question/files/–æ–±—â–µ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ.docx'

        doc = Document(file)
        full_text = "\n".join([para.text for para in doc.paragraphs])
        other_prompt = f"""–≤–µ–∂–ª–∏–≤–æ –∏ –∫—Ä–∞—Ç–∫–æ –æ—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ–ª—å–∑—É—è—Å—å –¥–æ–ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        –¥–æ–ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {full_text}
        """

        other_reply = send_to_gpt([{'role': 'system', 'content': other_prompt}])
        return other_reply
